Description: Fix handling *FLAGS environment variables containing >1 flags
Author: Andrey Rahmatullin <wrar@wrar.name>
Forwarded: no
Last-Update: 2016-02-13

diff --git a/SConstruct b/SConstruct
index 4cd7970..04e7e62 100644
--- a/SConstruct
+++ b/SConstruct
@@ -4,6 +4,8 @@ import os
 import subprocess
 import string
 import re
+
+import SCons
 
 def build_dbus_glue(target, source, env):
     """
@@ -76,13 +78,13 @@ env = Environment(ENV=os.environ, BUILDERS = {
 opts = Variables(['custom.py'], ARGUMENTS)
 
 opts.Add('CPPPATH', 'Additional preprocessor paths')
-opts.Add('CPPFLAGS', 'Additional preprocessor flags')
+opts.Add('CPPFLAGS', 'Additional preprocessor flags', converter=SCons.Util.CLVar)
 opts.Add('CPPDEFINES', 'defined constants')
 opts.Add('LIBPATH', 'Additional library paths')
 opts.Add('LIBS', 'Additional libraries')
-opts.Add('CCFLAGS', 'C Compiler flags')
-opts.Add('CXXFLAGS', 'C++ Compiler flags')
-opts.Add('LINKFLAGS', 'Linker Compiler flags')
+opts.Add('CCFLAGS', 'C Compiler flags', converter=SCons.Util.CLVar)
+opts.Add('CXXFLAGS', 'C++ Compiler flags', converter=SCons.Util.CLVar)
+opts.Add('LINKFLAGS', 'Linker Compiler flags', converter=SCons.Util.CLVar)
 opts.Add('AR', 'Library archiver')
 opts.Add('CC', 'C Compiler')
 opts.Add('CXX', 'C++ Compiler')
